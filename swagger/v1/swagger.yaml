---
openapi: 3.0.1
info:
  title: API V1
  version: v1
components:
  securitySchemes:
    accessToken:
      type: apiKey
      in: header
      name: access-token
    client:
      type: apiKey
      in: header
      name: client
    uid:
      type: apiKey
      in: header
      name: uid
paths:
  "/api/v1/cars":
    get:
      summary: Lista todos os carros
      tags:
      - Carros
      responses:
        '200':
          description: lista de carros retornada com sucesso
    post:
      summary: Cria um carro
      tags:
      - Carros
      security:
      - accessToken: []
        client: []
        uid: []
      parameters: []
      responses:
        '201':
          description: carro criado com sucesso
        '422':
          description: dados inválidos
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                model:
                  type: string
                fuel_capacity:
                  type: integer
                power:
                  type: integer
                weight:
                  type: integer
                category:
                  type: string
              required:
              - model
              - fuel_capacity
              - power
              - weight
              - category
  "/api/v1/cars/{id}":
    parameters:
    - name: id
      in: path
      description: ID do carro
      required: true
      schema:
        type: string
    get:
      summary: Mostra um carro específico
      tags:
      - Carros
      responses:
        '200':
          description: carro encontrado
        '404':
          description: carro não encontrado
    put:
      summary: Atualiza um carro
      tags:
      - Carros
      security:
      - accessToken: []
        client: []
        uid: []
      parameters: []
      responses:
        '200':
          description: carro atualizado com sucesso
        '404':
          description: carro não encontrado
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                model:
                  type: string
                fuel_capacity:
                  type: integer
                power:
                  type: integer
                weight:
                  type: integer
                category:
                  type: string
    delete:
      summary: Deleta um carro
      tags:
      - Carros
      security:
      - accessToken: []
        client: []
        uid: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: carro deletado com sucesso
  "/auth/sign_in":
    post:
      summary: Loga um usuário
      tags:
      - Usuários
      parameters: []
      responses:
        '200':
          description: Usuário autenticado
        '401':
          description: Credenciais inválidas
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: user@example.com
                password:
                  type: string
                  example: password123
              required:
              - email
              - password
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: www.example.com
